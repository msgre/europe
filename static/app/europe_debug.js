// Generated by CoffeeScript 1.10.0
App.module("Debug", function(Mod, App, Backbone, Marionette, $, _) {
  var Countries, CountriesView, Country, CountryView, HeaderView, ScreenLayout, _options, country, layout;
  Mod.startWithParent = false;
  _options = void 0;
  layout = void 0;
  country = void 0;
  Country = Backbone.Model.extend({
    defaults: {
      title: '',
      board: '',
      gate: '',
      led: '',
      active: false
    }
  });
  Countries = Backbone.Collection.extend({
    model: Country,
    comparator: 'title',
    url: '/api/countries',
    parse: function(response, options) {
      return response.results;
    },
    initialize: function() {
      var that;
      that = this;
      return window.channel.on('tunnel', function(event) {
        var passed;
        passed = that.find(function(model) {
          return ("" + (model.get('board'))) in event && event["" + (model.get('board'))] & model.get('gate');
        });
        if (passed) {
          passed.set('active', true);
          country.set({
            title: passed.get('title'),
            board: passed.get('board'),
            gate: passed.get('gate'),
            led: passed.get('led')
          });
          return window.channel.trigger('game:goodblink', [passed.get('led')]);
        }
      });
    }
  });
  HeaderView = Marionette.ItemView.extend({
    tagName: "div",
    template: function(serialized_model) {
      if (serialized_model.title) {
        return _.template("<h1><%= title %></h1><h2>board=<%= board %>, gate=<%= gate %>, led=<%= led %></h2>")(serialized_model);
      } else {
        return '';
      }
    },
    initialize: function() {
      return this.model.on('change', (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    },
    onDestroy: function() {
      return this.model.off('change');
    },
    onDomRefresh: function() {
      return window.setTimeout(function() {
        $('#header-debug').addClass('zmena');
        return window.setTimeout(function() {
          return $('#header-debug').removeClass('zmena');
        }, 500);
      }, 100);
    }
  });
  CountryView = Marionette.ItemView.extend({
    tagName: "div",
    className: function() {
      return "button button-1-4";
    },
    template: function(serialized_model) {
      return _.template("<p><%= title %> <span>board=<%= board %>, gate=<%= gate %>, led=<%= led %></span></p>")(serialized_model);
    },
    initialize: function() {
      return this.model.on('change', (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    },
    onRender: function() {
      if (this.model.get('active')) {
        return this.$el.addClass('active');
      } else {
        return this.$el.removeClass('active');
      }
    },
    onDestroy: function() {
      return this.model.off('change');
    }
  });
  CountriesView = Marionette.CollectionView.extend({
    tagName: 'td',
    childView: CountryView
  });
  ScreenLayout = Marionette.LayoutView.extend({
    template: _.template("<div id=\"header-debug\">\n</div>\n<div id=\"body\">\n    <table class=\"debug\">\n        <tr class=\"row-2\">\n        </tr>\n    </table>\n</div>"),
    regions: {
      country: '#header-debug',
      countries: '#body .row-2'
    }
  });
  Mod.onStart = function(options) {
    var countries;
    console.log('Debug module');
    console.log(options);
    _options = options;
    layout = new ScreenLayout({
      el: make_content_wrapper()
    });
    layout.render();
    countries = new Countries;
    window.countries = countries;
    country = new Country();
    layout.getRegion('country').show(new HeaderView({
      model: country
    }));
    layout.getRegion('countries').show(new CountriesView({
      collection: countries
    }));
    window.channel.on('key', function(msg) {
      if (msg === 'left' || msg === 'right') {
        countries.each(function(model) {
          return model.set('active', false);
        });
        country.set('title', '');
      }
      if (msg === 'fire') {
        return set_delay(function() {
          return window.channel.trigger('debug:close', _options);
        }, 100);
      }
    });
    return countries.fetch();
  };
  return Mod.onStop = function() {
    window.channel.off('tunnel');
    return layout.destroy();
  };
});
